description: A53 Embedded Trace Macrocell
register:
- default: '0x00000000'
  description: Programming Control Register
  field:
  - bits: '0'
    name: EN
    type: rw
  name: PRGCTLR
  offset: '0x00000004'
  type: rw
  width: 32
- default: '0x00000000'
  description: Status Register
  field:
  - bits: '1'
    name: PMSTABLE
    type: ro
  - bits: '0'
    name: IDLE
    type: ro
  name: STATR
  offset: '0x0000000C'
  type: ro
  width: 32
- default: '0x00000000'
  description: Trace Configuration Register
  field:
  - bits: '17'
    name: DV
    type: rw
  - bits: '16'
    name: DA
    type: rw
  - bits: '14:13'
    name: QE
    type: rw
  - bits: '12'
    name: RS
    type: rw
  - bits: '11'
    name: TS
    type: rw
  - bits: '10:8'
    name: COND
    type: rw
  - bits: '7'
    name: VMID
    type: rw
  - bits: '6'
    name: CID
    type: rw
  - bits: '4'
    name: CCI
    type: rw
  - bits: '3'
    name: BB
    type: rw
  - bits: '2:1'
    name: INSTP0
    type: rw
  name: CONFIGR
  offset: '0x00000010'
  type: rw
  width: 32
- default: '0x00000000'
  description: Auxiliary Control Register
  field:
  - bits: '7'
    name: COREIFEN
    type: rw
  - bits: '5'
    longdesc: When this bit is set to 1 the trace unit behavior deviates from architecturally-specified
      behavior.
    name: AUTHNOFLUSH
    shortdesc: Do not flush trace on de-assertion of authentication inputs.
    type: rw
  - bits: '4'
    name: TSNODELAY
    type: rw
  - bits: '3'
    name: SYNCDELAY
    type: rw
  - bits: '2'
    longdesc: When this bit is set to 1 the trace unit behavior deviates from architecturally-specified
      behavior.
    name: OVFLW
    shortdesc: Force an overflow if synchronization is not completed when second synchronization
      becomes due.
    type: rw
  - bits: '1'
    longdesc: When this bit is set to 1 trace unit behavior deviates from architecturally-specified
      behavior.
    name: IDLEACK
    shortdesc: Force idle-drain acknowledge high CPU does not wait for trace to drain
      before entering WFX state.
    type: rw
  - bits: '0'
    longdesc: Does not have any interaction with FIFO draining even in WFI state.
    name: AFREADY
    shortdesc: Always respond to AFREADY immediately.
    type: rw
  name: AUXCTLR
  offset: '0x00000018'
  type: rw
  width: 32
- default: '0x00000000'
  description: Event Control 0 Register
  field:
  - bits: '31'
    name: TYPE3
    type: rw
  - bits: '27:24'
    name: SEL3
    type: rw
  - bits: '23'
    name: TYPE2
    type: rw
  - bits: '19:16'
    name: SEL2
    type: rw
  - bits: '15'
    name: TYPE1
    type: rw
  - bits: '11:8'
    name: SEL1
    type: rw
  - bits: '7'
    name: TYPE0
    type: rw
  - bits: '3:0'
    name: SEL0
    type: rw
  name: EVENTCTL0R
  offset: '0x00000020'
  type: rw
  width: 32
- default: '0x00000000'
  description: Event Control 1 Register
  field:
  - bits: '12'
    longdesc: The resources and Event trace generation are unaffected by entry to
      a low power state
    name: LPOVERRIDE
    shortdesc: 'Low power state behavior override: 0=low poer state behavior unaffected,
      1=low power state overriden.'
    type: rw
  - bits: '11'
    name: ATB
    type: rw
  - bits: '3:0'
    name: EN
    type: rw
  name: EVENTCTL1R
  offset: '0x00000024'
  type: rw
  width: 32
- default: '0x00000000'
  description: Stall Control Register
  field:
  - bits: '8'
    longdesc: Controls if the trace unit can stall the processor when the instruction
      trace buffer space is less then LEVEL
    name: ISTALL
    shortdesc: Instuction stall bit.
    type: rw
  - bits: '3:2'
    longdesc: 'The field can support 4 monotonic levels from 0b00 to 0b11, where:
      0b00: Zero invations. This setting has a greater risk of an ETM trace unit FIFO
      overflow 0b11: Maximum invations occurs but there is less risk of a FIFO overflow'
    name: LEVEL
    shortdesc: Thereshold level field.
    type: rw
  name: STALLCTLR
  offset: '0x0000002C'
  type: rw
  width: 32
- default: '0x00000000'
  description: Global Timestamp Control Register
  field:
  - bits: '7:0'
    longdesc: When the selected event is triggered, the trace unit inserts a global
      timestamp into the trace streams.
    name: EVENT
    shortdesc: An event selector.
    type: rw
  name: TSCTLR
  offset: '0x00000030'
  type: rw
  width: 32
- default: '0x00000000'
  description: Synchronization Period Register
  field:
  - bits: '4:0'
    longdesc: The number of bytes is always a power of two and the permitted values
      are:and so on up to 0b10100, for which the request occurs after 2^20, or 1048576,
      bytes of trace.Values between 0b00001 and 0b001111 are reserved, as are values
      from 0b10101 onwards.
    name: PERIOD
    shortdesc: Controls how many bytes of trace, the sum of instruction and data,
      that a trace unit can generate before a periodic trace synchronization request
      occurs.
    type: rw
  name: SYNCPR
  offset: '0x00000034'
  type: rw
  width: 32
- default: '0x00000000'
  description: Cycle Count Control Register
  field:
  - bits: '11:0'
    longdesc: The minimum threshold value that can be programmed into THRESHOLD is
      given in IDR3.CCITMIN.Writing a value of zero might cause UNPREDICTABLE behaviour.
    name: THRESHOLD
    shortdesc: Sets the threshold value for instruction trace cycle counting.
    type: rw
  name: CCCTLR
  offset: '0x00000038'
  type: rw
  width: 32
- default: '0x00000000'
  description: Branch Broadcast Control Register
  field:
  - bits: '8'
    longdesc: 'Branch broadcasting is not enabled in the address range that RANGE
      defines. If RANGE==0 then branch broadcasting is enabled for the entire memory
      map. 1: Include mode. Branch broadcasting is enabled in the address range that
      RANGE defines. If RANGE==0 then the behavior of the trace unit is constrained
      UNPREDICTABLE. That is, the trace unit might or might not consider any instructions
      to be in a branch broadcast region.'
    name: MODE
    shortdesc: 'Mode bit: 0: Exclude mode.'
    type: rw
  - bits: '7:0'
    longdesc: 'Selects which address range comparator pairs are in use with branch
      broadcasting. Each bit represents an address range comparator pair, so bit[n]
      controls the selection of address range comparator pair n. If bit[n] is:'
    name: RANGE
    shortdesc: Address range field.
    type: rw
  name: BBCTLR
  offset: '0x0000003C'
  type: rw
  width: 32
- default: '0x00000000'
  description: Trace ID Register
  field:
  - bits: '31:0'
    longdesc: Sets the trace ID value for instruction trace.Bit[0] must be zero if
      data trace is enabled. If data trace is enabled then a trace unit sets the trace
      ID for data trace, to TRACEID+1.Bits [31:N] are RAZ/WI, where N is the value
      of IDR5.TRACEIDSIZE.If an implementation supports the CoreSight AMBA Trace Bus
      (ATB) then:The width of the field is 7 bits.Writing a reserved trace ID value
      causes UNPREDICTABLE behavior. See the AMBA 3 ATB Protocol Specification for
      information about which ATID bus values are reserved.
    name: TRACEID
    shortdesc: Trace ID field.
    type: rw
  name: TRACEIDR
  offset: '0x00000040'
  type: rw
  width: 32
- default: '0x00000000'
  description: ViewInst Main Control Register
  field:
  - bits: '23:20'
    longdesc: Bit[21]Exception level 1.Bit[22]Exception level 2.Bit[23]RAZ/WI. EXLEVEL_NS[3]
      is never implemented.The content of the field is IMPLEMENTATION DEFINED and
      is set by the value of IDR3.EXLEVEL_NS. If instruction tracing is not implemented
      for a given exception level, the corresponding bit in this field is not implemented.
      Unimplemented bits are RAZ/WI.
    name: EXLEVEL_NS
    shortdesc: In Non-secure state, each bit controls whether instruction tracing
      is enabled for the corresponding exception level:The exception levels are:Bit[20]Exception
      level 0.
    type: rw
  - bits: '19:16'
    longdesc: Bit[17]Exception level 1.Bit[18]RAZ/WI. EXLEVEL_S[2] is never implemented.Bit[19]Exception
      level 3.The content of the field is IMPLEMENTATION DEFINED and is set by the
      value of IDR3.EXLEVEL_S. If instruction tracing is not implemented for a given
      exception level, the corresponding bit in this field is not implemented. Unimplemented
      bits are RAZ/WI.
    name: EXLEVEL_S
    shortdesc: In Secure state, each bit controls whether instruction tracing is enabled
      for the corresponding exception level:The exception levels are:Bit[16]Exception
      level 0.
    type: rw
  - bits: '11'
    name: TRCERR
    type: rw
  - bits: '10'
    name: TRCRESET
    type: rw
  - bits: '9'
    name: SSSTATUS
    type: rw
  - bits: '7'
    name: TYPE
    type: rw
  - bits: '3:0'
    name: SEL
    type: rw
  name: VICTLR
  offset: '0x00000080'
  type: rw
  width: 32
- default: '0x00000000'
  description: ViewInst Include-Exclude Control Register
  field:
  - bits: '23:16'
    longdesc: One bit is provided for each implemented Address Range Comparator.
    name: EXCLUDE
    shortdesc: Defines the address range comparators for ViewInst exclude control.
    type: rw
  - bits: '7:0'
    longdesc: Selects which address range comparator pairs are in use with ViewInst
      include control. Each bit represents an address range comparator pair, so bit[m]
      controls the selection of address range comparator pair m.
    name: INCLUDE
    shortdesc: Include range field.
    type: rw
  name: VIIECTLR
  offset: '0x00000084'
  type: rw
  width: 32
- default: '0x00000000'
  description: ViewInst Start-Stop Control Register
  field:
  - bits: '31:16'
    longdesc: Each bit represents a single address comparator, so bit[m] controls
      the selection of single address comparator m-16.
    name: STOP
    shortdesc: Selects which single address comparators are in use with ViewInst start-stop
      control, for the purpose of stopping trace.
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a single address comparator, so bit[n] controls
      the selection of single address comparator n.
    name: START
    shortdesc: Selects which single address comparators are in use with ViewInst start-stop
      control, for the purpose of starting trace.
    type: rw
  name: VISSCTLR
  offset: '0x00000088'
  type: rw
  width: 32
- default: '0x00000000'
  description: Sequencer State Transition Control Registers 0
  field:
  - bits: '15:8'
    longdesc: Contains an event number. When the event occurs then the sequencer state
      moves from state n+1 to state n.
    name: B
    shortdesc: Backward field.
    type: rw
  - bits: '7:0'
    longdesc: Contains an event number. When the event occurs then the sequencer state
      moves from state n to state n+1.
    name: F
    shortdesc: Forward field.
    type: rw
  name: SEQEVR0
  offset: '0x00000100'
  type: rw
  width: 32
- default: '0x00000000'
  description: Sequencer State Transition Control Registers 1
  field:
  - bits: '15:8'
    longdesc: Contains an event number. When the event occurs then the sequencer state
      moves from state n+1 to state n.
    name: B
    shortdesc: Backward field.
    type: rw
  - bits: '7:0'
    longdesc: Contains an event number. When the event occurs then the sequencer state
      moves from state n to state n+1.
    name: F
    shortdesc: Forward field.
    type: rw
  name: SEQEVR1
  offset: '0x00000104'
  type: rw
  width: 32
- default: '0x00000000'
  description: Sequencer State Transition Control Registers 2
  field:
  - bits: '15:8'
    longdesc: Contains an event number. When the event occurs then the sequencer state
      moves from state n+1 to state n.
    name: B
    shortdesc: Backward field.
    type: rw
  - bits: '7:0'
    longdesc: Contains an event number. When the event occurs then the sequencer state
      moves from state n to state n+1.
    name: F
    shortdesc: Forward field.
    type: rw
  name: SEQEVR2
  offset: '0x00000108'
  type: rw
  width: 32
- default: '0x00000000'
  description: Sequencer Reset Control Register
  field:
  - bits: '7:0'
    longdesc: When the event occurs then the sequencer state moves to state 0.
    name: RST
    shortdesc: Contains an event number.
    type: rw
  name: SEQRSTEVR
  offset: '0x00000118'
  type: rw
  width: 32
- default: '0x00000000'
  description: Sequencer State Register
  field:
  - bits: '1:0'
    name: STATE
    type: rw
  name: SEQSTR
  offset: '0x0000011C'
  type: rw
  width: 32
- default: '0x00000000'
  description: External Input Select Register
  field:
  - bits: '28:24'
    name: SEL3
    type: rw
  - bits: '20:16'
    name: SEL2
    type: rw
  - bits: '12:8'
    name: SEL1
    type: rw
  - bits: '4:0'
    name: SEL0
    type: rw
  name: EXTINSELR
  offset: '0x00000120'
  type: rw
  width: 32
- default: '0x00000000'
  description: Counter Reload Value Registers 0
  field:
  - bits: '15:0'
    longdesc: When a reload event occurs for counter0 then the trace unit copies the
      VALUE field into counter 0.
    name: VALUE
    shortdesc: Contains the reload value for counter 0.
    type: rw
  name: CNTRLDVR0
  offset: '0x00000140'
  type: rw
  width: 32
- default: '0x00000000'
  description: Counter Reload Value Registers 1
  field:
  - bits: '15:0'
    longdesc: When a reload event occurs for counter 1 then the trace unit copies
      the VALUE field into counter 1.
    name: VALUE
    shortdesc: Contains the reload value for counter 1.
    type: rw
  name: CNTRLDVR1
  offset: '0x00000144'
  type: rw
  width: 32
- default: '0x00000000'
  description: Counter Control Register 0
  field:
  - bits: '16'
    name: RLDSELF
    type: rw
  - bits: '15'
    name: RLDTYPE
    type: rw
  - bits: '11:8'
    name: RLDSEL
    type: rw
  - bits: '7'
    name: CNTTYPE
    type: rw
  - bits: '3:0'
    name: CNTSEL
    type: rw
  name: CNTCTLR0
  offset: '0x00000150'
  type: rw
  width: 32
- default: '0x00000000'
  description: Counter Control Register 1
  field:
  - bits: '17'
    name: CNTCHAIN
    type: rw
  - bits: '16'
    name: RLDSELF
    type: rw
  - bits: '15:8'
    name: RLDEVENT
    type: rw
  - bits: '7:0'
    name: CNTEVENT
    type: rw
  name: CNTCTLR1
  offset: '0x00000154'
  type: rw
  width: 32
- default: '0x00000000'
  description: Counter Value Registers 0
  field:
  - bits: '15:0'
    name: VALUE
    type: rw
  name: CNTVR0
  offset: '0x00000160'
  type: rw
  width: 32
- default: '0x00000000'
  description: Counter Value Registers 1
  field:
  - bits: '15:0'
    name: VALUE
    type: rw
  name: CNTVR1
  offset: '0x00000164'
  type: rw
  width: 32
- default: '0x00000000'
  description: ID Register 8
  field:
  - bits: '31:0'
    longdesc: This is the maximum number of P0 elements in the trace stream that can
      be speculative at any time.
    name: MAXSPEC
    shortdesc: Indicates the maximum speculation depth of the instruction trace stream.
    type: ro
  name: IDR8
  offset: '0x00000180'
  type: ro
  width: 32
- default: '0x00000000'
  description: ID Register 9
  field:
  - bits: '31:0'
    longdesc: A value of 0 or 1 indicates one P0 key.
    name: NUMP0KEY
    shortdesc: Indicates the number of P0 right-hand keys that the trace unit can
      use.
    type: ro
  name: IDR9
  offset: '0x00000184'
  type: ro
  width: 32
- default: '0x00000000'
  description: ID Register 10
  field:
  - bits: '31:0'
    longdesc: The number includes normal and special keys.
    name: NUMP1KEY
    shortdesc: Indicates the number of P1 right-hand keys that the trace unit can
      use.
    type: ro
  name: IDR10
  offset: '0x00000188'
  type: ro
  width: 32
- default: '0x00000000'
  description: ID Register 11
  field:
  - bits: '31:0'
    name: NUMP1SPC
    type: ro
  name: IDR11
  offset: '0x0000018C'
  type: ro
  width: 32
- default: '0x00000000'
  description: ID Register 12
  field:
  - bits: '31:0'
    longdesc: The number includes normal and special keys.
    name: NUMCONDKEY
    shortdesc: Indicates the number of conditional instruction right-hand keys that
      the trace unit can use.
    type: ro
  name: IDR12
  offset: '0x00000190'
  type: ro
  width: 32
- default: '0x00000000'
  description: ID Register 13
  field:
  - bits: '31:0'
    name: NUMCONDSPC
    type: ro
  name: IDR13
  offset: '0x00000194'
  type: ro
  width: 32
- default: '0x00000000'
  description: Implementation Specific Register 0
  field:
  - bits: '3:0'
    name: SUPPORT
    type: rw
  name: IMSPEC0
  offset: '0x000001C0'
  type: rw
  width: 32
- default: '0x28000EA0'
  description: ID Register 0
  field:
  - bits: '29'
    longdesc: Indicates if the trace unit supports conditional instruction tracing
    name: COMMOPT
    shortdesc: Conditional instruction tracing support bit.
    type: ro
  - bits: '28:24'
    name: TSSIZE
    type: ro
  - bits: '16:15'
    name: QSUPP
    type: ro
  - bits: '14'
    name: QFILT
    type: ro
  - bits: '13:12'
    name: CONDTYPE
    type: ro
  - bits: '11:10'
    name: NUMEVENT
    type: ro
  - bits: '9'
    name: RETSTACK
    type: ro
  - bits: '7'
    longdesc: Indicates if the trace unit supports cycle counting for instructions
    name: TRCCCI
    shortdesc: Cycle counting instruction bit.
    type: ro
  - bits: '6'
    longdesc: Indicates if the trace unit supports conditional instruction tracing
    name: TRCCOND
    shortdesc: Conditional instruction tracing support bit.
    type: ro
  - bits: '5'
    longdesc: Indicates if the trace unit supports branch broadcast tracing
    name: TRCBB
    shortdesc: Branch broadcast tracing support bit.
    type: ro
  - bits: '4:3'
    name: TRCDATA
    type: ro
  - bits: '2:1'
    name: INSTP0
    type: ro
  name: IDR0
  offset: '0x000001E0'
  type: ro
  width: 32
- default: '0x41000402'
  description: ID Register 1
  field:
  - bits: '31:24'
    name: DESIGNER
    type: ro
  - bits: '11:8'
    name: TRCARCHMAJ
    type: ro
  - bits: '7:4'
    name: TRCARCHMIN
    type: ro
  - bits: '3:0'
    longdesc: ARM recommends:That the initial implementation sets REVISION==0x0 and
      the field then increments for any subsequent implementations. However, it is
      acceptable to omit some values or use another scheme to identify the revision
      number.That 2.REVISION==IDR1.REVISION. However, in situations where it is difficult
      to align these fields, such as with a metal layer fix, then it is acceptable
      to change the REVISION fields independently.
    name: REVISION
    shortdesc: Returns an IMPLEMENTATION DEFINED value that identifies the revision
      of the trace registers and the OS Save and Restore registers.
    type: ro
  name: IDR1
  offset: '0x000001E4'
  type: ro
  width: 32
- default: '0x00000488'
  description: ID Register 2
  field:
  - bits: '28:25'
    longdesc: and so on up to 0b1000, indicating the cycle counter is 20 bits in length.All
      other values are reserved.If cycle counting is not implemented, as indicated
      by IDR0., this field is 0b0000.
    name: CCSIZE
    shortdesc: Indicates the size of the cycle counter in bits minus 12.
    type: ro
  - bits: '24:20'
    name: DVSIZE
    type: ro
  - bits: '19:15'
    name: DASIZE
    type: ro
  - bits: '14:10'
    name: VMIDSIZE
    type: ro
  - bits: '9:5'
    name: CIDSIZE
    type: ro
  - bits: '4:0'
    name: IASIZE
    type: ro
  name: IDR2
  offset: '0x000001E8'
  type: ro
  width: 32
- default: '0x0D7B0004'
  description: ID Register 3
  field:
  - bits: '31'
    name: NOOVERFLOW
    type: ro
  - bits: '30:28'
    name: NUMPROC
    type: ro
  - bits: '27'
    name: SYSSTALL
    type: ro
  - bits: '26'
    name: STALLCTL
    type: ro
  - bits: '25'
    name: SYNCPR
    type: ro
  - bits: '24'
    longdesc: TRCERR is supported
    name: TRCERR
    shortdesc: Indicates if VICTLR.
    type: ro
  - bits: '23:20'
    name: EXLEVEL_NS
    type: ro
  - bits: '19:16'
    name: EXLEVEL_S
    type: ro
  - bits: '11:0'
    name: CCITMIN
    type: ro
  name: IDR3
  offset: '0x000001EC'
  type: ro
  width: 32
- default: '0x11170004'
  description: ID Register 4
  field:
  - bits: '31:28'
    name: NUMVMIDC
    type: ro
  - bits: '27:24'
    name: NUMCIDC
    type: ro
  - bits: '23:20'
    name: NUMSSCC
    type: ro
  - bits: '19:16'
    name: NUMRSPAIR
    type: ro
  - bits: '15:12'
    name: NUMPC
    type: ro
  - bits: '8'
    name: SUPPDAC
    type: ro
  - bits: '7:4'
    name: NUMDVC
    type: ro
  - bits: '3:0'
    name: NUMACPAIRS
    type: ro
  name: IDR4
  offset: '0x000001F0'
  type: ro
  width: 32
- default: '0x28C70822'
  description: ID Register 5
  field:
  - bits: '31'
    name: REDFUNCNTR
    type: ro
  - bits: '30:28'
    name: NUMCNTR
    type: ro
  - bits: '27:25'
    name: NUMSEQSTATE
    type: ro
  - bits: '23'
    name: LPOVERRIDE
    type: ro
  - bits: '22'
    name: ATBTRIG
    type: ro
  - bits: '21:16'
    name: TRACEIDSIZE
    type: ro
  - bits: '11:9'
    name: NUMEXTINSEL
    type: ro
  - bits: '8:0'
    name: NUMEXTIN
    type: ro
  name: IDR5
  offset: '0x000001F4'
  type: ro
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 2
  field:
  - bits: '21'
    name: PAIRINV
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR2
  offset: '0x00000208'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 3
  field:
  - bits: '21'
    name: RESERVED
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR3
  offset: '0x0000020C'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 4
  field:
  - bits: '21'
    name: PAIRINV
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR4
  offset: '0x00000210'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 5
  field:
  - bits: '21'
    name: RESERVED
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR5
  offset: '0x00000214'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 6
  field:
  - bits: '21'
    name: PAIRINV
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR6
  offset: '0x00000218'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 7
  field:
  - bits: '21'
    name: RESERVED
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR7
  offset: '0x0000021C'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 8
  field:
  - bits: '21'
    name: PAIRINV
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR8
  offset: '0x00000220'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 9
  field:
  - bits: '21'
    name: RESERVED
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR9
  offset: '0x00000224'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 10
  field:
  - bits: '21'
    name: PAIRINV
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR10
  offset: '0x00000228'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 11
  field:
  - bits: '21'
    name: RESERVED
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR11
  offset: '0x0000022C'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 12
  field:
  - bits: '21'
    name: PAIRINV
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR12
  offset: '0x00000230'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 13
  field:
  - bits: '21'
    name: RESERVED
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR13
  offset: '0x00000234'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 14
  field:
  - bits: '21'
    name: PAIRINV
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR14
  offset: '0x00000238'
  type: rw
  width: 32
- default: '0x00000000'
  description: Resource Selection Control Registers 15
  field:
  - bits: '21'
    name: RESERVED
    type: rw
  - bits: '20'
    name: INV
    type: rw
  - bits: '19:16'
    name: GROUP
    type: rw
  - bits: '15:0'
    longdesc: Each bit represents a resource from the selected group.
    name: SELECT
    shortdesc: Selects one or more resources from the group that the GROUP field selects.
    type: rw
  name: RSCTLR15
  offset: '0x0000023C'
  type: rw
  width: 32
- default: '0x00000000'
  description: Single-Shot Comparator Control Register 0
  field:
  - bits: '24'
    name: RST
    type: rw
  - bits: '19:16'
    longdesc: Each bit represents an address range comparator pair.
    name: ARC
    shortdesc: Selects one or more address range comparators for single-shot control.
    type: rw
  - bits: '7:0'
    longdesc: Each bit represents a single address comparator.
    name: SAC
    shortdesc: Selects one or more single address comparators for single-shot control.
    type: rw
  name: SSCCR0
  offset: '0x00000280'
  type: rw
  width: 32
- default: '0x00000000'
  description: Single-Shot Comparator Status Register 0
  field:
  - bits: '31'
    longdesc: Indicates if any of the selected comparators have matched. STATUS must
      be written to set an initial state when configuring the trace unit, if the single-shot
      comparator is to be used.
    name: STATUS
    shortdesc: Single-shot status bit.
    type: rw
  - bits: '2'
    longdesc: Indicates if the trace unit supports data address with data value comparisons
    name: DV
    shortdesc: Data value comparator support bit.
    type: ro
  - bits: '1'
    longdesc: Indicates if the trace unit supports data address comparisons
    name: DA
    shortdesc: Data address comparator support bit.
    type: ro
  - bits: '0'
    longdesc: Indicates if the trace unit supports instruction address comparisons
    name: INST
    shortdesc: Instruction address comparator support bit.
    type: ro
  name: SSCSR0
  offset: '0x000002A0'
  type: mixed
  width: 32
- default: '0x00000000'
  description: OS Lock Access Register
  field:
  - bits: '0'
    name: LOCK
    type: wo
  name: OSLAR
  offset: '0x00000300'
  type: wo
  width: 32
- default: '0x0000000A'
  description: OS Lock Status Register
  field:
  - bits: '3'
    longdesc: This bit is RES1, which indicates that the OS Lock is always implemented.
    name: PRESENT
    shortdesc: Indicates whether the OS Lock is implemented.
    type: ro
  - bits: '2'
    name: BIT32
    type: ro
  - bits: '1'
    longdesc: The indicates if the trace unit core power domain is powered down.
    name: LOCKED
    shortdesc: 'OS Lock status bit: When the trace unit core power domain is powered
      down the value is UNKNOWN.'
    type: ro
  name: OSLSR
  offset: '0x00000304'
  type: ro
  width: 32
- default: '0x00000000'
  description: Power Down Control Register
  field:
  - bits: '3'
    longdesc: However, if the trace unit and the processor are in the same power domain
      then the implementation might combine the PU status with a signal from the processor.
    name: PU
    shortdesc: 'Powerup request bit: Typically, a trace unit drives a signal representing
      the value of this bit to a power controller to request that the trace unit core
      power domain is powered up.'
    type: rw
  name: PDCR
  offset: '0x00000310'
  type: rw
  width: 32
- default: '0x00000000'
  description: Power Down Status Register
  field:
  - bits: '5'
    name: LOCKED
    type: ro
  - bits: '1'
    longdesc: Indicates whether the trace register state is valid:After this register
      is read, if the Software Lock is unlocked and the trace unit core power domain
      is powered up, then the trace unit sets this bit to 0. The controls whether
      the Software Lock is locked.
    name: STICKYPD
    shortdesc: Sticky powerdown status bit.
    type: ro
  - bits: '0'
    name: POWER
    type: ro
  name: PDSR
  offset: '0x00000314'
  type: ro
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 0
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN0_31TO0
  offset: '0x00000400'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 0
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN0_63TO32
  offset: '0x00000404'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 1
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN1_31TO0
  offset: '0x00000408'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 1
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN1_63TO32
  offset: '0x0000040C'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 2
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN2_31TO0
  offset: '0x00000410'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 2
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN2_63TO32
  offset: '0x00000414'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 3
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN3_31TO0
  offset: '0x00000418'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 3
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN3_63TO32
  offset: '0x0000041C'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 4
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN4_31TO0
  offset: '0x00000420'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 4
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN4_63TO32
  offset: '0x00000424'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 5
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN5_31TO0
  offset: '0x00000428'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 5
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN5_63TO32
  offset: '0x0000042C'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 6
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN6_31TO0
  offset: '0x00000430'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 6
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN6_63TO32
  offset: '0x00000434'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 7
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN7_31TO0
  offset: '0x00000438'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Value Registers 7
  field:
  - bits: '31:0'
    longdesc: The address comparators can support implementations that use multiple
      address widths. When the trace unit compares the ADDRESS field with an address
      that has a width less than this field, then it must ignore those upper bits
      in the comparison. For example, in a system that supports both 32-bit and 64-bit
      addresses, when the processor is in 32-bit state the comparator must ignore
      the ADDRESS[63:32] bits.
    name: ADDRESS
    shortdesc: Address value.
    type: rw
  name: ACVRN7_63TO32
  offset: '0x0000043C'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Access Type Registers 0-7
  field:
  - bits: '21'
    name: DTBM
    type: rw
  - bits: '20'
    longdesc: Supported only if the corresponding data value comparator is supported,
      otherwise this bit is RES0.
    name: DATARANGE
    shortdesc: Controls whether a data value comparison uses the single address comparator
      or the address range comparator:The trace unit ignores this field when DATAMATCH==0b00.
    type: rw
  - bits: '19:18'
    name: DATASIZE
    type: rw
  - bits: '17:16'
    name: DATAMATCH
    type: rw
  - bits: '15:12'
    longdesc: Bit[13]Exception level 1.Bit[14]Exception level 2.Bit[15]RAZ/WI. EXLEVEL_NS[3]
      is never implemented.The content of the field is IMPLEMENTATION DEFINED and
      is set by the value of IDR3.EXLEVEL_NS. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_NS
    shortdesc: In Non-secure state, each bit controls whether a comparison can occur
      for the corresponding exception level:The exception levels are:Bit[12]Exception
      level 0.
    type: rw
  - bits: '11:8'
    longdesc: Bit[9]Exception level 1.Bit[10]RAZ/WI. EXLEVEL_S[2] is never implemented.Bit[11]Exception
      level 3.The content of the field is IMPLEMENTATION DEFINED and is set by the
      value of IDR3.EXLEVEL_S. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_S
    shortdesc: In Secure state, each bit controls whether a comparison can occur for
      the corresponding exception level:The exception levels are:Bit[8]Exception level
      0.
    type: rw
  - bits: '6:4'
    longdesc: NUMCIDFC > 0 or IDR4.NUMVMIDC > 0, selects a Context ID comparator or
      VMID comparator:and so on up to 0b111, which indicates comparator 7.The implemented
      width of this field is determined by the size of whichever of IDR4.NUMVMIDC
      and IDR4.NUMCIDC is larger. If the largest field is one bit long, then this
      field implements one bit, bit[4]. If the largest field is four bits long, then
      this field implements two bits, bits[5:4]. Unimplemented bits within the field
      are RAZ/WI.If IDR4.NUMCIDFC==0 and IDR4.NUMVMIDC==0, this field is RES0.
    name: CONTEXT
    shortdesc: If IDR4.
    type: rw
  - bits: '3:2'
    longdesc: NUMVMIDC>0 and IDR4.NUMCIDC>0, this field controls whether the trace
      unit performs a Context ID comparison, a virtual machine identifier (VMID) comparison,
      or both comparisons:If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC>0, bit [3] is RES0
      and bit[2] controls whether the trace unit performs a Context ID comparison,
      as with cases 0b00 and 0b01 above.If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC==0, both
      bits are RES0.
    name: CONTEXTTYPE
    shortdesc: If IDR4.
    type: rw
  - bits: '1:0'
    longdesc: SUPPDAC does not indicate that data address comparisons are implemented,
      then this field is RES0. This means that any comparison performed by this address
      comparator is an instruction address comparison.
    name: TYPE
    shortdesc: Controls what type of comparison the trace unit performs:If IDR4.
    type: rw
  name: ACATRN0
  offset: '0x00000480'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Access Type Registers 0-7
  field:
  - bits: '21'
    name: DTBM
    type: rw
  - bits: '20'
    longdesc: Supported only if the corresponding data value comparator is supported,
      otherwise this bit is RES0.
    name: DATARANGE
    shortdesc: Controls whether a data value comparison uses the single address comparator
      or the address range comparator:The trace unit ignores this field when DATAMATCH==0b00.
    type: rw
  - bits: '19:18'
    name: DATASIZE
    type: rw
  - bits: '17:16'
    name: DATAMATCH
    type: rw
  - bits: '15:12'
    longdesc: Bit[13]Exception level 1.Bit[14]Exception level 2.Bit[15]RAZ/WI. EXLEVEL_NS[3]
      is never implemented.The content of the field is IMPLEMENTATION DEFINED and
      is set by the value of IDR3.EXLEVEL_NS. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_NS
    shortdesc: In Non-secure state, each bit controls whether a comparison can occur
      for the corresponding exception level:The exception levels are:Bit[12]Exception
      level 0.
    type: rw
  - bits: '11:8'
    longdesc: Bit[9]Exception level 1.Bit[10]RAZ/WI. EXLEVEL_S[2] is never implemented.Bit[11]Exception
      level 3.The content of the field is IMPLEMENTATION DEFINED and is set by the
      value of IDR3.EXLEVEL_S. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_S
    shortdesc: In Secure state, each bit controls whether a comparison can occur for
      the corresponding exception level:The exception levels are:Bit[8]Exception level
      0.
    type: rw
  - bits: '6:4'
    longdesc: NUMCIDFC > 0 or IDR4.NUMVMIDC > 0, selects a Context ID comparator or
      VMID comparator:and so on up to 0b111, which indicates comparator 7.The implemented
      width of this field is determined by the size of whichever of IDR4.NUMVMIDC
      and IDR4.NUMCIDC is larger. If the largest field is one bit long, then this
      field implements one bit, bit[4]. If the largest field is four bits long, then
      this field implements two bits, bits[5:4]. Unimplemented bits within the field
      are RAZ/WI.If IDR4.NUMCIDFC==0 and IDR4.NUMVMIDC==0, this field is RES0.
    name: CONTEXT
    shortdesc: If IDR4.
    type: rw
  - bits: '3:2'
    longdesc: NUMVMIDC>0 and IDR4.NUMCIDC>0, this field controls whether the trace
      unit performs a Context ID comparison, a virtual machine identifier (VMID) comparison,
      or both comparisons:If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC>0, bit [3] is RES0
      and bit[2] controls whether the trace unit performs a Context ID comparison,
      as with cases 0b00 and 0b01 above.If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC==0, both
      bits are RES0.
    name: CONTEXTTYPE
    shortdesc: If IDR4.
    type: rw
  - bits: '1:0'
    longdesc: SUPPDAC does not indicate that data address comparisons are implemented,
      then this field is RES0. This means that any comparison performed by this address
      comparator is an instruction address comparison.
    name: TYPE
    shortdesc: Controls what type of comparison the trace unit performs:If IDR4.
    type: rw
  name: ACATRN1
  offset: '0x00000488'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Access Type Registers 0-7
  field:
  - bits: '21'
    name: DTBM
    type: rw
  - bits: '20'
    longdesc: Supported only if the corresponding data value comparator is supported,
      otherwise this bit is RES0.
    name: DATARANGE
    shortdesc: Controls whether a data value comparison uses the single address comparator
      or the address range comparator:The trace unit ignores this field when DATAMATCH==0b00.
    type: rw
  - bits: '19:18'
    name: DATASIZE
    type: rw
  - bits: '17:16'
    name: DATAMATCH
    type: rw
  - bits: '15:12'
    longdesc: Bit[13]Exception level 1.Bit[14]Exception level 2.Bit[15]RAZ/WI. EXLEVEL_NS[3]
      is never implemented.The content of the field is IMPLEMENTATION DEFINED and
      is set by the value of IDR3.EXLEVEL_NS. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_NS
    shortdesc: In Non-secure state, each bit controls whether a comparison can occur
      for the corresponding exception level:The exception levels are:Bit[12]Exception
      level 0.
    type: rw
  - bits: '11:8'
    longdesc: Bit[9]Exception level 1.Bit[10]RAZ/WI. EXLEVEL_S[2] is never implemented.Bit[11]Exception
      level 3.The content of the field is IMPLEMENTATION DEFINED and is set by the
      value of IDR3.EXLEVEL_S. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_S
    shortdesc: In Secure state, each bit controls whether a comparison can occur for
      the corresponding exception level:The exception levels are:Bit[8]Exception level
      0.
    type: rw
  - bits: '6:4'
    longdesc: NUMCIDFC > 0 or IDR4.NUMVMIDC > 0, selects a Context ID comparator or
      VMID comparator:and so on up to 0b111, which indicates comparator 7.The implemented
      width of this field is determined by the size of whichever of IDR4.NUMVMIDC
      and IDR4.NUMCIDC is larger. If the largest field is one bit long, then this
      field implements one bit, bit[4]. If the largest field is four bits long, then
      this field implements two bits, bits[5:4]. Unimplemented bits within the field
      are RAZ/WI.If IDR4.NUMCIDFC==0 and IDR4.NUMVMIDC==0, this field is RES0.
    name: CONTEXT
    shortdesc: If IDR4.
    type: rw
  - bits: '3:2'
    longdesc: NUMVMIDC>0 and IDR4.NUMCIDC>0, this field controls whether the trace
      unit performs a Context ID comparison, a virtual machine identifier (VMID) comparison,
      or both comparisons:If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC>0, bit [3] is RES0
      and bit[2] controls whether the trace unit performs a Context ID comparison,
      as with cases 0b00 and 0b01 above.If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC==0, both
      bits are RES0.
    name: CONTEXTTYPE
    shortdesc: If IDR4.
    type: rw
  - bits: '1:0'
    longdesc: SUPPDAC does not indicate that data address comparisons are implemented,
      then this field is RES0. This means that any comparison performed by this address
      comparator is an instruction address comparison.
    name: TYPE
    shortdesc: Controls what type of comparison the trace unit performs:If IDR4.
    type: rw
  name: ACATRN2
  offset: '0x00000490'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Access Type Registers 0-7
  field:
  - bits: '21'
    name: DTBM
    type: rw
  - bits: '20'
    longdesc: Supported only if the corresponding data value comparator is supported,
      otherwise this bit is RES0.
    name: DATARANGE
    shortdesc: Controls whether a data value comparison uses the single address comparator
      or the address range comparator:The trace unit ignores this field when DATAMATCH==0b00.
    type: rw
  - bits: '19:18'
    name: DATASIZE
    type: rw
  - bits: '17:16'
    name: DATAMATCH
    type: rw
  - bits: '15:12'
    longdesc: Bit[13]Exception level 1.Bit[14]Exception level 2.Bit[15]RAZ/WI. EXLEVEL_NS[3]
      is never implemented.The content of the field is IMPLEMENTATION DEFINED and
      is set by the value of IDR3.EXLEVEL_NS. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_NS
    shortdesc: In Non-secure state, each bit controls whether a comparison can occur
      for the corresponding exception level:The exception levels are:Bit[12]Exception
      level 0.
    type: rw
  - bits: '11:8'
    longdesc: Bit[9]Exception level 1.Bit[10]RAZ/WI. EXLEVEL_S[2] is never implemented.Bit[11]Exception
      level 3.The content of the field is IMPLEMENTATION DEFINED and is set by the
      value of IDR3.EXLEVEL_S. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_S
    shortdesc: In Secure state, each bit controls whether a comparison can occur for
      the corresponding exception level:The exception levels are:Bit[8]Exception level
      0.
    type: rw
  - bits: '6:4'
    longdesc: NUMCIDFC > 0 or IDR4.NUMVMIDC > 0, selects a Context ID comparator or
      VMID comparator:and so on up to 0b111, which indicates comparator 7.The implemented
      width of this field is determined by the size of whichever of IDR4.NUMVMIDC
      and IDR4.NUMCIDC is larger. If the largest field is one bit long, then this
      field implements one bit, bit[4]. If the largest field is four bits long, then
      this field implements two bits, bits[5:4]. Unimplemented bits within the field
      are RAZ/WI.If IDR4.NUMCIDFC==0 and IDR4.NUMVMIDC==0, this field is RES0.
    name: CONTEXT
    shortdesc: If IDR4.
    type: rw
  - bits: '3:2'
    longdesc: NUMVMIDC>0 and IDR4.NUMCIDC>0, this field controls whether the trace
      unit performs a Context ID comparison, a virtual machine identifier (VMID) comparison,
      or both comparisons:If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC>0, bit [3] is RES0
      and bit[2] controls whether the trace unit performs a Context ID comparison,
      as with cases 0b00 and 0b01 above.If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC==0, both
      bits are RES0.
    name: CONTEXTTYPE
    shortdesc: If IDR4.
    type: rw
  - bits: '1:0'
    longdesc: SUPPDAC does not indicate that data address comparisons are implemented,
      then this field is RES0. This means that any comparison performed by this address
      comparator is an instruction address comparison.
    name: TYPE
    shortdesc: Controls what type of comparison the trace unit performs:If IDR4.
    type: rw
  name: ACATRN3
  offset: '0x00000498'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Access Type Registers 0-7
  field:
  - bits: '21'
    name: DTBM
    type: rw
  - bits: '20'
    longdesc: Supported only if the corresponding data value comparator is supported,
      otherwise this bit is RES0.
    name: DATARANGE
    shortdesc: Controls whether a data value comparison uses the single address comparator
      or the address range comparator:The trace unit ignores this field when DATAMATCH==0b00.
    type: rw
  - bits: '19:18'
    name: DATASIZE
    type: rw
  - bits: '17:16'
    name: DATAMATCH
    type: rw
  - bits: '15:12'
    longdesc: Bit[13]Exception level 1.Bit[14]Exception level 2.Bit[15]RAZ/WI. EXLEVEL_NS[3]
      is never implemented.The content of the field is IMPLEMENTATION DEFINED and
      is set by the value of IDR3.EXLEVEL_NS. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_NS
    shortdesc: In Non-secure state, each bit controls whether a comparison can occur
      for the corresponding exception level:The exception levels are:Bit[12]Exception
      level 0.
    type: rw
  - bits: '11:8'
    longdesc: Bit[9]Exception level 1.Bit[10]RAZ/WI. EXLEVEL_S[2] is never implemented.Bit[11]Exception
      level 3.The content of the field is IMPLEMENTATION DEFINED and is set by the
      value of IDR3.EXLEVEL_S. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_S
    shortdesc: In Secure state, each bit controls whether a comparison can occur for
      the corresponding exception level:The exception levels are:Bit[8]Exception level
      0.
    type: rw
  - bits: '6:4'
    longdesc: NUMCIDFC > 0 or IDR4.NUMVMIDC > 0, selects a Context ID comparator or
      VMID comparator:and so on up to 0b111, which indicates comparator 7.The implemented
      width of this field is determined by the size of whichever of IDR4.NUMVMIDC
      and IDR4.NUMCIDC is larger. If the largest field is one bit long, then this
      field implements one bit, bit[4]. If the largest field is four bits long, then
      this field implements two bits, bits[5:4]. Unimplemented bits within the field
      are RAZ/WI.If IDR4.NUMCIDFC==0 and IDR4.NUMVMIDC==0, this field is RES0.
    name: CONTEXT
    shortdesc: If IDR4.
    type: rw
  - bits: '3:2'
    longdesc: NUMVMIDC>0 and IDR4.NUMCIDC>0, this field controls whether the trace
      unit performs a Context ID comparison, a virtual machine identifier (VMID) comparison,
      or both comparisons:If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC>0, bit [3] is RES0
      and bit[2] controls whether the trace unit performs a Context ID comparison,
      as with cases 0b00 and 0b01 above.If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC==0, both
      bits are RES0.
    name: CONTEXTTYPE
    shortdesc: If IDR4.
    type: rw
  - bits: '1:0'
    longdesc: SUPPDAC does not indicate that data address comparisons are implemented,
      then this field is RES0. This means that any comparison performed by this address
      comparator is an instruction address comparison.
    name: TYPE
    shortdesc: Controls what type of comparison the trace unit performs:If IDR4.
    type: rw
  name: ACATRN4
  offset: '0x000004A0'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Access Type Registers 0-7
  field:
  - bits: '21'
    name: DTBM
    type: rw
  - bits: '20'
    longdesc: Supported only if the corresponding data value comparator is supported,
      otherwise this bit is RES0.
    name: DATARANGE
    shortdesc: Controls whether a data value comparison uses the single address comparator
      or the address range comparator:The trace unit ignores this field when DATAMATCH==0b00.
    type: rw
  - bits: '19:18'
    name: DATASIZE
    type: rw
  - bits: '17:16'
    name: DATAMATCH
    type: rw
  - bits: '15:12'
    longdesc: Bit[13]Exception level 1.Bit[14]Exception level 2.Bit[15]RAZ/WI. EXLEVEL_NS[3]
      is never implemented.The content of the field is IMPLEMENTATION DEFINED and
      is set by the value of IDR3.EXLEVEL_NS. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_NS
    shortdesc: In Non-secure state, each bit controls whether a comparison can occur
      for the corresponding exception level:The exception levels are:Bit[12]Exception
      level 0.
    type: rw
  - bits: '11:8'
    longdesc: Bit[9]Exception level 1.Bit[10]RAZ/WI. EXLEVEL_S[2] is never implemented.Bit[11]Exception
      level 3.The content of the field is IMPLEMENTATION DEFINED and is set by the
      value of IDR3.EXLEVEL_S. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_S
    shortdesc: In Secure state, each bit controls whether a comparison can occur for
      the corresponding exception level:The exception levels are:Bit[8]Exception level
      0.
    type: rw
  - bits: '6:4'
    longdesc: NUMCIDFC > 0 or IDR4.NUMVMIDC > 0, selects a Context ID comparator or
      VMID comparator:and so on up to 0b111, which indicates comparator 7.The implemented
      width of this field is determined by the size of whichever of IDR4.NUMVMIDC
      and IDR4.NUMCIDC is larger. If the largest field is one bit long, then this
      field implements one bit, bit[4]. If the largest field is four bits long, then
      this field implements two bits, bits[5:4]. Unimplemented bits within the field
      are RAZ/WI.If IDR4.NUMCIDFC==0 and IDR4.NUMVMIDC==0, this field is RES0.
    name: CONTEXT
    shortdesc: If IDR4.
    type: rw
  - bits: '3:2'
    longdesc: NUMVMIDC>0 and IDR4.NUMCIDC>0, this field controls whether the trace
      unit performs a Context ID comparison, a virtual machine identifier (VMID) comparison,
      or both comparisons:If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC>0, bit [3] is RES0
      and bit[2] controls whether the trace unit performs a Context ID comparison,
      as with cases 0b00 and 0b01 above.If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC==0, both
      bits are RES0.
    name: CONTEXTTYPE
    shortdesc: If IDR4.
    type: rw
  - bits: '1:0'
    longdesc: SUPPDAC does not indicate that data address comparisons are implemented,
      then this field is RES0. This means that any comparison performed by this address
      comparator is an instruction address comparison.
    name: TYPE
    shortdesc: Controls what type of comparison the trace unit performs:If IDR4.
    type: rw
  name: ACATRN5
  offset: '0x000004A8'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Access Type Registers 0-7
  field:
  - bits: '21'
    name: DTBM
    type: rw
  - bits: '20'
    longdesc: Supported only if the corresponding data value comparator is supported,
      otherwise this bit is RES0.
    name: DATARANGE
    shortdesc: Controls whether a data value comparison uses the single address comparator
      or the address range comparator:The trace unit ignores this field when DATAMATCH==0b00.
    type: rw
  - bits: '19:18'
    name: DATASIZE
    type: rw
  - bits: '17:16'
    name: DATAMATCH
    type: rw
  - bits: '15:12'
    longdesc: Bit[13]Exception level 1.Bit[14]Exception level 2.Bit[15]RAZ/WI. EXLEVEL_NS[3]
      is never implemented.The content of the field is IMPLEMENTATION DEFINED and
      is set by the value of IDR3.EXLEVEL_NS. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_NS
    shortdesc: In Non-secure state, each bit controls whether a comparison can occur
      for the corresponding exception level:The exception levels are:Bit[12]Exception
      level 0.
    type: rw
  - bits: '11:8'
    longdesc: Bit[9]Exception level 1.Bit[10]RAZ/WI. EXLEVEL_S[2] is never implemented.Bit[11]Exception
      level 3.The content of the field is IMPLEMENTATION DEFINED and is set by the
      value of IDR3.EXLEVEL_S. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_S
    shortdesc: In Secure state, each bit controls whether a comparison can occur for
      the corresponding exception level:The exception levels are:Bit[8]Exception level
      0.
    type: rw
  - bits: '6:4'
    longdesc: NUMCIDFC > 0 or IDR4.NUMVMIDC > 0, selects a Context ID comparator or
      VMID comparator:and so on up to 0b111, which indicates comparator 7.The implemented
      width of this field is determined by the size of whichever of IDR4.NUMVMIDC
      and IDR4.NUMCIDC is larger. If the largest field is one bit long, then this
      field implements one bit, bit[4]. If the largest field is four bits long, then
      this field implements two bits, bits[5:4]. Unimplemented bits within the field
      are RAZ/WI.If IDR4.NUMCIDFC==0 and IDR4.NUMVMIDC==0, this field is RES0.
    name: CONTEXT
    shortdesc: If IDR4.
    type: rw
  - bits: '3:2'
    longdesc: NUMVMIDC>0 and IDR4.NUMCIDC>0, this field controls whether the trace
      unit performs a Context ID comparison, a virtual machine identifier (VMID) comparison,
      or both comparisons:If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC>0, bit [3] is RES0
      and bit[2] controls whether the trace unit performs a Context ID comparison,
      as with cases 0b00 and 0b01 above.If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC==0, both
      bits are RES0.
    name: CONTEXTTYPE
    shortdesc: If IDR4.
    type: rw
  - bits: '1:0'
    longdesc: SUPPDAC does not indicate that data address comparisons are implemented,
      then this field is RES0. This means that any comparison performed by this address
      comparator is an instruction address comparison.
    name: TYPE
    shortdesc: Controls what type of comparison the trace unit performs:If IDR4.
    type: rw
  name: ACATRN6
  offset: '0x000004B0'
  type: rw
  width: 32
- default: '0x00000000'
  description: Address Comparator Access Type Registers 0-7
  field:
  - bits: '21'
    name: DTBM
    type: rw
  - bits: '20'
    longdesc: Supported only if the corresponding data value comparator is supported,
      otherwise this bit is RES0.
    name: DATARANGE
    shortdesc: Controls whether a data value comparison uses the single address comparator
      or the address range comparator:The trace unit ignores this field when DATAMATCH==0b00.
    type: rw
  - bits: '19:18'
    name: DATASIZE
    type: rw
  - bits: '17:16'
    name: DATAMATCH
    type: rw
  - bits: '15:12'
    longdesc: Bit[13]Exception level 1.Bit[14]Exception level 2.Bit[15]RAZ/WI. EXLEVEL_NS[3]
      is never implemented.The content of the field is IMPLEMENTATION DEFINED and
      is set by the value of IDR3.EXLEVEL_NS. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_NS
    shortdesc: In Non-secure state, each bit controls whether a comparison can occur
      for the corresponding exception level:The exception levels are:Bit[12]Exception
      level 0.
    type: rw
  - bits: '11:8'
    longdesc: Bit[9]Exception level 1.Bit[10]RAZ/WI. EXLEVEL_S[2] is never implemented.Bit[11]Exception
      level 3.The content of the field is IMPLEMENTATION DEFINED and is set by the
      value of IDR3.EXLEVEL_S. Unimplemented bits are RAZ/WI.
    name: EXLEVEL_S
    shortdesc: In Secure state, each bit controls whether a comparison can occur for
      the corresponding exception level:The exception levels are:Bit[8]Exception level
      0.
    type: rw
  - bits: '6:4'
    longdesc: NUMCIDFC > 0 or IDR4.NUMVMIDC > 0, selects a Context ID comparator or
      VMID comparator:and so on up to 0b111, which indicates comparator 7.The implemented
      width of this field is determined by the size of whichever of IDR4.NUMVMIDC
      and IDR4.NUMCIDC is larger. If the largest field is one bit long, then this
      field implements one bit, bit[4]. If the largest field is four bits long, then
      this field implements two bits, bits[5:4]. Unimplemented bits within the field
      are RAZ/WI.If IDR4.NUMCIDFC==0 and IDR4.NUMVMIDC==0, this field is RES0.
    name: CONTEXT
    shortdesc: If IDR4.
    type: rw
  - bits: '3:2'
    longdesc: NUMVMIDC>0 and IDR4.NUMCIDC>0, this field controls whether the trace
      unit performs a Context ID comparison, a virtual machine identifier (VMID) comparison,
      or both comparisons:If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC>0, bit [3] is RES0
      and bit[2] controls whether the trace unit performs a Context ID comparison,
      as with cases 0b00 and 0b01 above.If IDR4.NUMVMIDC==0 and IDR4.NUMCIDC==0, both
      bits are RES0.
    name: CONTEXTTYPE
    shortdesc: If IDR4.
    type: rw
  - bits: '1:0'
    longdesc: SUPPDAC does not indicate that data address comparisons are implemented,
      then this field is RES0. This means that any comparison performed by this address
      comparator is an instruction address comparison.
    name: TYPE
    shortdesc: Controls what type of comparison the trace unit performs:If IDR4.
    type: rw
  name: ACATRN7
  offset: '0x000004B8'
  type: rw
  width: 32
- default: '0x00000000'
  description: Context ID Comparator Value Register 0
  field:
  - bits: '31:0'
    longdesc: The implemented width of this field is IMPLEMENTATION DEFINED and is
      set by IDR2.CIDSIZE. Unimplemented bits are RAZ/WI.After a processor reset,
      the ETM architecture assumes that the Context ID is zero until the processor
      updates the Context ID.
    name: VALUE
    shortdesc: Context ID value.
    type: rw
  name: CIDCVR0
  offset: '0x00000600'
  type: rw
  width: 32
- default: '0x00000000'
  description: VMID Comparator Value Register 0
  field:
  - bits: '31:0'
    longdesc: The implemented width of this field is IMPLEMENTATION DEFINED, and is
      set by IDR2.VMIDSIZE. Unimplemented bits are RAZ/WI.After a processor reset,
      the ETM architecture assumes that the VMID is zero until the processor updates
      the VMID.
    name: VALUE
    shortdesc: VMID value.
    type: rw
  name: VMIDCVR0
  offset: '0x00000640'
  type: rw
  width: 32
- default: '0x00000000'
  description: Context ID Comparator Control Register 0
  field:
  - bits: '31:0'
    longdesc: Each bit in this field corresponds to a byte in CIDCVRn. When a bit
      is
    name: COMP
    shortdesc: Controls the mask value that the trace unit applies to n.
    type: rw
  name: CIDCCTLR0
  offset: '0x00000680'
  type: rw
  width: 32
- default: '0x00000000'
  description: Integration ATB Identification Register
  field:
  - bits: '6:0'
    name: ID
    type: rw
  name: ITATBIDR
  offset: '0x00000EE4'
  type: rw
  width: 32
- default: '0x00000000'
  description: Integration Instruction ATB Data Register
  field:
  - bits: '4'
    name: ATDATAM_31
    type: wo
  - bits: '3'
    name: ATDATAM_23
    type: wo
  - bits: '2'
    name: ATDATAM_15
    type: wo
  - bits: '1'
    name: ATDATAM_7
    type: wo
  - bits: '0'
    name: ATDATAM_0
    type: wo
  name: ITIDATAR
  offset: '0x00000EEC'
  type: wo
  width: 32
- default: '0x00000000'
  description: Integration Instruction ATB In Register
  field:
  - bits: '1'
    name: AFVALIDM
    type: ro
  - bits: '0'
    name: ATREADYM
    type: ro
  name: ITIATBINR
  offset: '0x00000EF4'
  type: ro
  width: 32
- default: '0x00000000'
  description: Integration Instruction ATB Out Register
  field:
  - bits: '9:8'
    name: BYTES
    type: wo
  - bits: '1'
    name: AFREADY
    type: wo
  - bits: '0'
    name: ATVALID
    type: wo
  name: ITIATBOUTR
  offset: '0x00000EFC'
  type: wo
  width: 32
- default: '0x00000000'
  description: Integration Mode Control Register
  field:
  - bits: '0'
    name: ITEN
    type: rw
  name: ITCTRL
  offset: '0x00000F00'
  type: rw
  width: 32
- default: '0x0000000F'
  description: Claim Tag Set Register
  field:
  - bits: '7:0'
    longdesc: Any unimplemented bits in the SET field are RAZ. A debug agent can read
      this register to discover the width of the claim tag.Software must use the register
      to read the values of the claim tag and to clear a claim tag bit to 0.
    name: SET
    shortdesc: When a write to one of these bits occurs, with the value:When a read
      occurs, the implemented bits in the SET field are RAO and therefore the value
      the register returns indicates how many SET bits are supported.
    type: rw
  name: CLAIMSET
  offset: '0x00000FA0'
  type: rw
  width: 32
- default: '0x00000000'
  description: Claim Tag Clear Register
  field:
  - bits: '7:0'
    name: CLR
    type: rw
  name: CLAIMCLR
  offset: '0x00000FA4'
  type: rw
  width: 32
- default: '0x80000000'
  description: Device Affinity Register 0
  field:
  - bits: '31:0'
    name: ETDEVAFF0
    type: ro
  name: DEVAFF0
  offset: '0x00000FA8'
  type: ro
  width: 32
- default: '0x00000000'
  description: Device Affinity Register 1
  field:
  - bits: '31:0'
    name: ETDEVAFF1
    type: ro
  name: DEVAFF1
  offset: '0x00000FAC'
  type: ro
  width: 32
- default: '0x00000000'
  description: Software Lock Access Register
  field:
  - bits: '31:0'
    longdesc: Writing any other value to this register sets the lock, disabling write
      accesses to this component's registers through a memory mapped interface.Software
      can use the Software Lock to prevent accidental modification of the trace unit
      registers by software being debugged. For example, software that accidentally
      initializes an incorrect region of memory might disable the trace unit and make
      it impossible to trace the software.
    name: KEY
    shortdesc: Writing the key value 0xC5ACCE55 to this field clears the lock, enabling
      write accesses to this component's registers through a memory-mapped interface.
    type: wo
  name: LAR
  offset: '0x00000FB0'
  type: wo
  width: 32
- default: '0x00000000'
  description: Software Lock Status Register
  field:
  - bits: '2'
    longdesc: RAZ.
    name: NTT
    shortdesc: Not thirty-two bit access required.
    type: ro
  - bits: '1'
    longdesc: Possible values of this field are
    name: SLK
    shortdesc: Software lock status for this component.
    type: ro
  - bits: '0'
    longdesc: RAO.
    name: SLI
    shortdesc: Software lock implemented.
    type: ro
  name: LSR
  offset: '0x00000FB4'
  type: ro
  width: 32
- default: '0x00000088'
  description: Authentication Status Register
  field:
  - bits: '7:6'
    name: SNID
    type: ro
  - bits: '5:4'
    name: SID
    type: ro
  - bits: '3:2'
    name: NSNID
    type: ro
  - bits: '1:0'
    name: NSID
    type: ro
  name: AUTHSTATUS
  offset: '0x00000FB8'
  type: ro
  width: 32
- default: '0x47704A13'
  description: Device Architecture Register
  field:
  - bits: '31:21'
    longdesc: For trace, this is ARM Limited.Bits [31:28] are the JEP 106 continuation
      code, 0x4.Bits [27:21] are the JEP 106 ID code, 0x3B.
    name: ARCHITECT
    shortdesc: Defines the architecture of the component.
    type: ro
  - bits: '20'
    longdesc: This field is RAO.
    name: PRESENT
    shortdesc: When set to 1, indicates that the DEVARCH is present.
    type: ro
  - bits: '19:16'
    longdesc: For architectures defined by ARM this is the minor revision.For trace,
      the revision defined by ETMv4 is 0x0.All other values are reserved.
    name: REVISION
    shortdesc: Defines the architecture revision.
    type: ro
  - bits: '15:0'
    longdesc: For architectures defined by ARM this is further subdivided.For trace,
      bits [15:12] are the architecture version, 0x4; bits [11:0] are the architecture
      part number, 0xA13.This corresponds to trace architecture version ETMv4.
    name: ARCHID
    shortdesc: Defines this part to be a v8-A debug component.
    type: ro
  name: DEVARCH
  offset: '0x00000FBC'
  type: ro
  width: 32
- default: '0x00000000'
  description: Device ID Register
  field:
  - bits: '31:0'
    name: DEVID
    type: ro
  name: DEVID
  offset: '0x00000FC8'
  type: ro
  width: 32
- default: '0x00000013'
  description: Device Type Register
  field:
  - bits: '7:4'
    longdesc: All other values are reserved.
    name: SUB
    shortdesc: Returns 0x1, to indicate that the ETM generates processor trace.
    type: ro
  - bits: '3:0'
    longdesc: All other values are reserved.
    name: MAIN
    shortdesc: Returns 0x3, to indicate that the ETM is a trace source.
    type: ro
  name: DEVTYPE
  offset: '0x00000FCC'
  type: ro
  width: 32
- default: '0x00000004'
  description: Peripheral Identification Register 4
  field:
  - bits: '7:4'
    longdesc: The ETM memory map occupies 4KB.
    name: SIZE
    shortdesc: Size of the component.
    type: ro
  - bits: '3:0'
    longdesc: For ARM Limited, this field is 0b0100.
    name: DES_2
    shortdesc: Designer, JEP106 continuation code.
    type: ro
  name: PIDR4
  offset: '0x00000FD0'
  type: ro
  width: 32
- default: '0x00000000'
  description: Peripheral Identification Register 5-7
  field:
  - bits: '31:0'
    name: RESERVED
    type: ro
  name: PIDR5
  offset: '0x00000FD4'
  type: ro
  width: 32
- default: '0x00000000'
  description: Peripheral Identification Register 6-7
  field:
  - bits: '31:0'
    name: RESERVED
    type: ro
  name: PIDR6
  offset: '0x00000FD8'
  type: ro
  width: 32
- default: '0x00000000'
  description: Peripheral Identification Register 7-7
  field:
  - bits: '31:0'
    name: RESERVED
    type: ro
  name: PIDR7
  offset: '0x00000FDC'
  type: ro
  width: 32
- default: '0x0000005D'
  description: Peripheral Identification Register 0
  field:
  - bits: '7:0'
    name: PART_0
    type: ro
  name: PIDR0
  offset: '0x00000FE0'
  type: ro
  width: 32
- default: '0x000000B9'
  description: Peripheral Identification Register 1
  field:
  - bits: '7:4'
    longdesc: For ARM Limited, this field is 0b1011.
    name: DES_0
    shortdesc: Designer, bits[3:0] of JEP106 ID code.
    type: ro
  - bits: '3:0'
    name: PART_1
    type: ro
  name: PIDR1
  offset: '0x00000FE4'
  type: ro
  width: 32
- default: '0x0000004B'
  description: Peripheral Identification Register 2
  field:
  - bits: '7:4'
    longdesc: See also IDR1.REVISION.
    name: REVISION
    shortdesc: The IMPLEMENTATION DEFINED revision number for the ETM implementation.
    type: ro
  - bits: '3'
    longdesc: Indicates a JEP106 identity code is used.
    name: JEDEC
    shortdesc: RAO.
    type: ro
  - bits: '2:0'
    longdesc: For ARM Limited, this field is 0b011.
    name: DES_1
    shortdesc: Designer, most significant bits of JEP106 ID code.
    type: ro
  name: PIDR2
  offset: '0x00000FE8'
  type: ro
  width: 32
- default: '0x00000000'
  description: Peripheral Identification Register 3
  field:
  - bits: '7:4'
    longdesc: After silicon is available, if metal fixes are necessary, the manufacturer
      can alter the top metal layer so that this field can indicate any post-fab silicon
      changes.
    name: REVAND
    shortdesc: The IMPLEMENTATION DEFINED manufacturing revision number for the implementation.
    type: ro
  - bits: '3:0'
    longdesc: Indicates someone other than the Designer has modified the component.
    name: CMOD
    shortdesc: Customer modified.
    type: ro
  name: PIDR3
  offset: '0x00000FEC'
  type: ro
  width: 32
- default: '0x0000000D'
  description: Component Identification Register 0
  field:
  - bits: '7:0'
    longdesc: Must read as 0x0D.
    name: PRMBL_0
    shortdesc: Preamble.
    type: ro
  name: CIDR0
  offset: '0x00000FF0'
  type: ro
  width: 32
- default: '0x00000090'
  description: Component Identification Register 1
  field:
  - bits: '7:4'
    longdesc: Reads as 0x9, to indicate that the ETM is a debug component, with CoreSight
      architecture compliant management registers.
    name: CLASS
    shortdesc: Component class.
    type: ro
  - bits: '3:0'
    longdesc: Must read as 0x0.
    name: PRMBL_1
    shortdesc: Preamble.
    type: ro
  name: CIDR1
  offset: '0x00000FF4'
  type: ro
  width: 32
- default: '0x00000005'
  description: Component Identification Register 2
  field:
  - bits: '7:0'
    longdesc: Must read as 0x05.
    name: PRMBL_2
    shortdesc: Preamble.
    type: ro
  name: CIDR2
  offset: '0x00000FF8'
  type: ro
  width: 32
- default: '0x000000B1'
  description: Component Identification Register 3
  field:
  - bits: '7:0'
    longdesc: Must read as 0xB1.
    name: PRMBL_3
    shortdesc: Preamble.
    type: ro
  name: CIDR3
  offset: '0x00000FFC'
  type: ro
  width: 32
