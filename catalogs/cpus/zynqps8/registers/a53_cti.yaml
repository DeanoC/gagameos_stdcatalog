description: A53 Cross Trigger Interface with to/from broadcast
register:
- default: '0x00000000'
  description: The CTI Control Register enables the CTI.
  field:
  - bits: '0'
    name: GLBEN
    type: rw
  name: CTICONTROL
  offset: '0x00000000'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Interrupt Acknowledge Register is write-only. Any bits written
    as a 1 cause the ctitrigout output signal to be acknowledged. The acknowledgement
    is cleared when MAPTRIGOUT is deactivated. This register is used when the ctitrigout
    is used as a sticky output, that is, no hardware acknowledge is supplied, and
    a software acknowledge is required.
  field:
  - bits: '7:0'
    longdesc: There is one bit of the register for each ctitrigout output.When a 1
      is written to a bit in this register, the corresponding ctitrigout is acknowledged
      and is cleared when MAPTRIGOUT is LOW. Writing a 0 to any of the bits in this
      register has no effect.
    name: INTACK
    shortdesc: Acknowledges the corresponding ctitrigout output.
    type: wo
  name: CTIINTACK
  offset: '0x00000010'
  type: wo
  width: 32
- default: '0x00000000'
  description: The CTI Application Trigger Set Register is read/write. A write to
    this register causes a channel event to be raised, corresponding to the bit written
    to.
  field:
  - bits: '3:0'
    longdesc: 'There is one bit of the register for each channel.Read: 0 = application
      trigger inactive (reset). 1 = application trigger active.Write: 0 = no effect.
      1 = generate channel event.'
    name: APPSET
    shortdesc: Setting a bit HIGH generates a channel event for the selected channel.
    type: wo
  name: CTIAPPSET
  offset: '0x00000014'
  type: wo
  width: 32
- default: '0x00000000'
  description: The CTI Interrupt Acknowledge Register is write-only. A write to this
    register causes a channel event to be cleared, corresponding to the bit written
    to.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the register for each channel.When a 1 is written
      to a bit in this register, the corresponding application trigger is disabled
      in the CTIAPPSET register. Writing a 0 to any of the bits in this register has
      no effect.
    name: APPCLEAR
    shortdesc: Clears corresponding bits in the CTIAPPSET register.
    type: wo
  name: CTIAPPCLEAR
  offset: '0x00000018'
  type: wo
  width: 32
- default: '0x00000000'
  description: The CTI Application Pulse Register is write-only. A write to this register
    causes a channel event pulse, one cticlk period, to be generated, corresponding
    to the bit written to. The pulse external to the ECT can be extended to multi-cycle
    by the handshaking interface circuits. This register clears itself immediately,
    so it can be repeatedly written to without software having to clear it.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the register for each channel.When a 1 is written
      to a bit in this register, a corresponding channel event pulse is generated
      for one cticlk period. Writing a 0 to any of the bits in this register has no
      effect.
    name: APPULSE
    shortdesc: Setting a bit HIGH generates a channel event pulse for the selected
      channel.
    type: wo
  name: CTIAPPPULSE
  offset: '0x0000001C'
  type: wo
  width: 32
- default: '0x00000000'
  description: The CTI Trigger 0 to Channel Enable Register enables the signalling
    of an event on CTM channels when the core issues a trigger, ctitrigin, to the
    CTI. Within this register there is one bit for each of the four channels implemented.
    This register does not affect the application trigger operations.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, it enables the ctitrigin signal to generate
      an event on the respective channel of the CTM. For example, TRIGINEN[0] set
      to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this
      register disables the ctitrigin signal from generating an event on the respective
      channel of the CTM.Reading this register returns the programmed value.
    name: TRIGINEN
    shortdesc: Enables a cross trigger event to the corresponding channel when an
      ctitrigin is activated.
    type: rw
  name: CTIINEN0
  offset: '0x00000020'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Trigger 1 to Channel Enable Register enables the signalling
    of an event on CTM channels when the core issues a trigger, ctitrigin, to the
    CTI. Within this register there is one bit for each of the four channels implemented.
    This register does not affect the application trigger operations.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, it enables the ctitrigin signal to generate
      an event on the respective channel of the CTM. For example, TRIGINEN[0] set
      to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this
      register disables the ctitrigin signal from generating an event on the respective
      channel of the CTM.Reading this register returns the programmed value.
    name: TRIGINEN
    shortdesc: Enables a cross trigger event to the corresponding channel when an
      ctitrigin is activated.
    type: rw
  name: CTIINEN1
  offset: '0x00000024'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Trigger to Channel Enable Register 0 enables the signalling
    of an event on CTM channels when the core issues a trigger, ctitrigin, to the
    CTI. Within this register there is one bit for each of the four channels implemented.
    This register does not affect the application trigger operations.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, it enables the ctitrigin signal to generate
      an event on the respective channel of the CTM. For example, TRIGINEN[0] set
      to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this
      register disables the ctitrigin signal from generating an event on the respective
      channel of the CTM.Reading this register returns the programmed value.
    name: TRIGINEN
    shortdesc: Enables a cross trigger event to the corresponding channel when an
      ctitrigin is activated.
    type: rw
  name: CTIINEN2
  offset: '0x00000028'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Trigger to Channel Enable Register 0 enables the signalling
    of an event on CTM channels when the core issues a trigger, ctitrigin, to the
    CTI. Within this register there is one bit for each of the four channels implemented.
    This register does not affect the application trigger operations.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, it enables the ctitrigin signal to generate
      an event on the respective channel of the CTM. For example, TRIGINEN[0] set
      to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this
      register disables the ctitrigin signal from generating an event on the respective
      channel of the CTM.Reading this register returns the programmed value.
    name: TRIGINEN
    shortdesc: Enables a cross trigger event to the corresponding channel when an
      ctitrigin is activated.
    type: rw
  name: CTIINEN3
  offset: '0x0000002C'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Trigger to Channel Enable Register 0 enables the signalling
    of an event on CTM channels when the core issues a trigger, ctitrigin, to the
    CTI. Within this register there is one bit for each of the four channels implemented.
    This register does not affect the application trigger operations.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, it enables the ctitrigin signal to generate
      an event on the respective channel of the CTM. For example, TRIGINEN[0] set
      to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this
      register disables the ctitrigin signal from generating an event on the respective
      channel of the CTM.Reading this register returns the programmed value.
    name: TRIGINEN
    shortdesc: Enables a cross trigger event to the corresponding channel when an
      ctitrigin is activated.
    type: rw
  name: CTIINEN4
  offset: '0x00000030'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Trigger to Channel Enable Register 0 enables the signalling
    of an event on CTM channels when the core issues a trigger, ctitrigin, to the
    CTI. Within this register there is one bit for each of the four channels implemented.
    This register does not affect the application trigger operations.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, it enables the ctitrigin signal to generate
      an event on the respective channel of the CTM. For example, TRIGINEN[0] set
      to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this
      register disables the ctitrigin signal from generating an event on the respective
      channel of the CTM.Reading this register returns the programmed value.
    name: TRIGINEN
    shortdesc: Enables a cross trigger event to the corresponding channel when an
      ctitrigin is activated.
    type: rw
  name: CTIINEN5
  offset: '0x00000034'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Trigger to Channel Enable Register 0 enables the signalling
    of an event on CTM channels when the core issues a trigger, ctitrigin, to the
    CTI. Within this register there is one bit for each of the four channels implemented.
    This register does not affect the application trigger operations.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, it enables the ctitrigin signal to generate
      an event on the respective channel of the CTM. For example, TRIGINEN[0] set
      to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this
      register disables the ctitrigin signal from generating an event on the respective
      channel of the CTM.Reading this register returns the programmed value.
    name: TRIGINEN
    shortdesc: Enables a cross trigger event to the corresponding channel when an
      ctitrigin is activated.
    type: rw
  name: CTIINEN6
  offset: '0x00000038'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Trigger to Channel Enable Register 0 enables the signalling
    of an event on CTM channels when the core issues a trigger, ctitrigin, to the
    CTI. Within this register there is one bit for each of the four channels implemented.
    This register does not affect the application trigger operations.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, it enables the ctitrigin signal to generate
      an event on the respective channel of the CTM. For example, TRIGINEN[0] set
      to 1 enables ctitrigin onto channel 0. Writing a 0 to any of the bits in this
      register disables the ctitrigin signal from generating an event on the respective
      channel of the CTM.Reading this register returns the programmed value.
    name: TRIGINEN
    shortdesc: Enables a cross trigger event to the corresponding channel when an
      ctitrigin is activated.
    type: rw
  name: CTIINEN7
  offset: '0x0000003C'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Channel to Trigger 0 Enable Registers define which channels
    can generate a ctitrigout[0] output. Within this register there is one bit for
    each of the four channels implemented. This register affects the mapping from
    application trigger to trigger outputs.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, the channel input (ctichin) from the CTM
      is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0]
      to cause a trigger event on the ctitrigout[0] output. When a 0 is written to
      any of the bits in this register, the channel input (ctichin) from the CTM is
      not routed to the ctitrigout output.Reading this register returns the programmed
      value.
    name: TRIGOUTEN
    shortdesc: Changing the value of this bit from a 0 to a 1 enables a channel event
      for the corresponding channel to generate a ctitrigout[1] output.
    type: rw
  name: CTIOUTEN0
  offset: '0x000000A0'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Channel to Trigger 1 Enable Registers define which channels
    can generate a ctitrigout[1] output. Within this register there is one bit for
    each of the four channels implemented. This register affects the mapping from
    application trigger to trigger outputs.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, the channel input (ctichin) from the CTM
      is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0]
      to cause a trigger event on the ctitrigout[1] output. When a 0 is written to
      any of the bits in this register, the channel input (ctichin) from the CTM is
      not routed to the ctitrigout output.Reading this register returns the programmed
      value.
    name: TRIGOUTEN
    shortdesc: Changing the value of this bit from a 0 to a 1 enables a channel event
      for the corresponding channel to generate a ctitrigout[1] output.
    type: rw
  name: CTIOUTEN1
  offset: '0x000000A4'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Channel to Trigger 2 Enable Registers define which channels
    can generate a ctitrigout[2] output. Within this register there is one bit for
    each of the four channels implemented. This register affects the mapping from
    application trigger to trigger outputs.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, the channel input (ctichin) from the CTM
      is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0]
      to cause a trigger event on the ctitrigout[2] output. When a 0 is written to
      any of the bits in this register, the channel input (ctichin) from the CTM is
      not routed to the ctitrigout output.Reading this register returns the programmed
      value.
    name: TRIGOUTEN
    shortdesc: Changing the value of this bit from a 0 to a 1 enables a channel event
      for the corresponding channel to generate a ctitrigout[2] output.
    type: rw
  name: CTIOUTEN2
  offset: '0x000000A8'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Channel to Trigger 3 Enable Registers define which channels
    can generate a ctitrigout[3] output. Within this register there is one bit for
    each of the four channels implemented. This register affects the mapping from
    application trigger to trigger outputs.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, the channel input (ctichin) from the CTM
      is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0]
      to cause a trigger event on the ctitrigout[3] output. When a 0 is written to
      any of the bits in this register, the channel input (ctichin) from the CTM is
      not routed to the ctitrigout output.Reading this register returns the programmed
      value.
    name: TRIGOUTEN
    shortdesc: Changing the value of this bit from a 0 to a 1 enables a channel event
      for the corresponding channel to generate a ctitrigout[3] output.
    type: rw
  name: CTIOUTEN3
  offset: '0x000000AC'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Channel to Trigger 4 Enable Registers define which channels
    can generate a ctitrigout[4] output. Within this register there is one bit for
    each of the four channels implemented. This register affects the mapping from
    application trigger to trigger outputs.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, the channel input (ctichin) from the CTM
      is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0]
      to cause a trigger event on the ctitrigout[4] output. When a 0 is written to
      any of the bits in this register, the channel input (ctichin) from the CTM is
      not routed to the ctitrigout output.Reading this register returns the programmed
      value.
    name: TRIGOUTEN
    shortdesc: Changing the value of this bit from a 0 to a 1 enables a channel event
      for the corresponding channel to generate a ctitrigout[4] output.
    type: rw
  name: CTIOUTEN4
  offset: '0x000000B0'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Channel to Trigger 5 Enable Registers define which channels
    can generate a ctitrigout[5] output. Within this register there is one bit for
    each of the four channels implemented. This register affects the mapping from
    application trigger to trigger outputs.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, the channel input (ctichin) from the CTM
      is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0]
      to cause a trigger event on the ctitrigout[5] output. When a 0 is written to
      any of the bits in this register, the channel input (ctichin) from the CTM is
      not routed to the ctitrigout output.Reading this register returns the programmed
      value.
    name: TRIGOUTEN
    shortdesc: Changing the value of this bit from a 0 to a 1 enables a channel event
      for the corresponding channel to generate a ctitrigout[5] output.
    type: rw
  name: CTIOUTEN5
  offset: '0x000000B4'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Channel to Trigger 6 Enable Registers define which channels
    can generate a ctitrigout[6] output. Within this register there is one bit for
    each of the four channels implemented. This register affects the mapping from
    application trigger to trigger outputs.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, the channel input (ctichin) from the CTM
      is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0]
      to cause a trigger event on the ctitrigout[6] output. When a 0 is written to
      any of the bits in this register, the channel input (ctichin) from the CTM is
      not routed to the ctitrigout output.Reading this register returns the programmed
      value.
    name: TRIGOUTEN
    shortdesc: Changing the value of this bit from a 0 to a 1 enables a channel event
      for the corresponding channel to generate a ctitrigout[6] output.
    type: rw
  name: CTIOUTEN6
  offset: '0x000000B8'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Channel to Trigger 7 Enable Registers define which channels
    can generate a ctitrigout[7] output. Within this register there is one bit for
    each of the four channels implemented. This register affects the mapping from
    application trigger to trigger outputs.
  field:
  - bits: '3:0'
    longdesc: There is one bit of the field for each of the four channels.When a 1
      is written to a bit in this register, the channel input (ctichin) from the CTM
      is routed to the ctitrigout output. For example, enabling bit 0 enables ctichin[0]
      to cause a trigger event on the ctitrigout[7] output. When a 0 is written to
      any of the bits in this register, the channel input (ctichin) from the CTM is
      not routed to the ctitrigout output.Reading this register returns the programmed
      value.
    name: TRIGOUTEN
    shortdesc: Changing the value of this bit from a 0 to a 1 enables a channel event
      for the corresponding channel to generate a ctitrigout[7] output.
    type: rw
  name: CTIOUTEN7
  offset: '0x000000BC'
  type: rw
  width: 32
- default: '0x00000000'
  description: The CTI Trigger In Status Register provides the status of the ctitrigin
    inputs.
  field:
  - bits: '7:0'
    longdesc: 1 = ctitrigin is active. 0 = ctitrigin is inactive.Because the register
      provides a view of the raw ctitrigin inputs, the reset value is unknown. There
      is one bit of the field for each trigger input.
    name: TRIGINSTATUS
    shortdesc: Shows the status of the ctitrigin inputs.
    type: ro
  name: CTITRIGINSTATUS
  offset: '0x00000130'
  type: ro
  width: 32
- default: '0x00000000'
  description: The CTI Trigger Out Status Register provides the status of the ctitrigout
    outputs.
  field:
  - bits: '7:0'
    longdesc: 1 = ctitrigout is active. 0 = ctitrigout is inactive.There is one bit
      of the field for each trigger output.
    name: TRIGOUTSTATUS
    shortdesc: Shows the status of the ctitrigout outputs.
    type: ro
  name: CTITRIGOUTSTATUS
  offset: '0x00000134'
  type: ro
  width: 32
- default: '0x00000000'
  description: The CTI Channel In Status Register provides the status of the ctichin
    inputs.
  field:
  - bits: '3:0'
    longdesc: 1 = ctichin is active. 0 = ctichin is inactive.Because the register
      provides a view of the raw ctichin inputs, the reset value is unknown. There
      is one bit of the field for each channel input.
    name: CTICHINSTATUS
    shortdesc: Shows the status of the ctichin inputs.
    type: ro
  name: CTICHINSTATUS
  offset: '0x00000138'
  type: ro
  width: 32
- default: '0x00000000'
  description: The CTI Channel Out Status Register provides the status of the CTI
    ctichout outputs.
  field:
  - bits: '3:0'
    longdesc: 1 = ctichout is active. 0 = ctichout is inactive.There is one bit of
      the field for each channel output.
    name: CTICHOUTSTATUS
    shortdesc: Shows the status of the ctichout outputs.
    type: ro
  name: CTICHOUTSTATUS
  offset: '0x0000013C'
  type: ro
  width: 32
- default: '0x0000000F'
  description: The Gate Enable Register prevents the channels from propagating through
    the CTM to other CTIs. This enables local cross-triggering, for example for causing
    an interrupt when the ETM trigger occurs. It can be used effectively with CTIAPPSET,
    CTIAPPCLEAR, and CTIAPPPULSE for asserting trigger outputs by asserting channels,
    without affecting the rest of the system. On reset, this register is 0xF, and
    channel propagation is enabled.
  field:
  - bits: '3:0'
    longdesc: Set to 0 to disable channel propagation.
    name: CTIGATEEN
    shortdesc: Enable CTICHOUT3-0 respectively.
    type: rw
  name: CTIGATE
  offset: '0x00000140'
  type: rw
  width: 32
- default: '0x00000000'
  description: Implementation-defined ASIC control, value written to the register
    is output on asicctl[7:0].
  field:
  - bits: '7:0'
    longdesc: If external multiplexing of trigger signals is implemented then the
      number of multiplexed signals on each trigger must be reflected within the Device
      ID Register. This is done within a Verilog define EXTMUXNUM.
    name: ASICCTL
    shortdesc: Implementation-defined ASIC control, value written to the register
      is output on asicctl[7:0].
    type: rw
  name: ASICCTL
  offset: '0x00000144'
  type: rw
  width: 32
- default: '0x00000000'
  description: CTI Integration mode Control Register
  field:
  - bits: '0'
    longdesc: When IME == 1, the device reverts to an integration mode to enable integration
      testing or topology detection. The integration mode behavior is IMPLEMENTATION
      DEFINED.
    name: IME
    shortdesc: Integration mode enable.
    type: rw
  name: ITCTRL
  offset: '0x00000F00'
  type: rw
  width: 32
- default: '0x0000000F'
  description: CTI Claim Set
  field:
  - bits: '31:0'
    longdesc: If x is greater than or equal to the IMPLEMENTATION DEFINED number of
      CLAIM tags, this bit is RAZ/SBZ. Software can rely on these bits reading as
      zero, and must use a should-be-zero policy on writes. Implementations must ignore
      writes.Otherwise, the bit is RAO and the behavior on writes is:A single write
      to CTICLAIMSET can set multiple tags to 1.
    name: CLAIM_X
    shortdesc: CLAIM tag set bit.
    type: rw
  name: CLAIMSET
  offset: '0x00000FA0'
  type: rw
  width: 32
- default: '0x00000000'
  description: CTI Claim Clear
  field:
  - bits: '31:0'
    longdesc: If x is greater than or equal to the IMPLEMENTATION DEFINED number of
      CLAIM tags, this bit is RAZ/SBZ. Software can rely on these bits reading as
      zero, and must use a should-be-zero policy on writes. Implementations must ignore
      writes.Otherwise, reads return the value of CLAIM[x] and the behavior on writes
      is:A single write to CTICLAIMCLR can clear multiple tags to 0.
    name: CLAIM_X
    shortdesc: Clear CLAIM tag.
    type: rw
  name: CLAIMCLR
  offset: '0x00000FA4'
  type: rw
  width: 32
- default: '0x80000000'
  description: CTI Device Affinity Register 0
  field:
  - bits: '31:0'
    longdesc: Read-only copy of the low half of MPIDR_EL1, as seen from the highest
      implemented exception level.
    name: CTIDEVAFF0
    shortdesc: MPIDR_EL1 low half.
    type: ro
  name: DEVAFF0
  offset: '0x00000FA8'
  type: ro
  width: 32
- default: '0x00000000'
  description: CTI Device Affinity Register 1
  field:
  - bits: '31:0'
    longdesc: Read-only copy of the high half of MPIDR_EL1, as seen from the highest
      implemented exception level.
    name: CTIDEVAFF1
    shortdesc: MPIDR_EL1 high half.
    type: ro
  name: DEVAFF1
  offset: '0x00000FAC'
  type: ro
  width: 32
- default: '0x00000000'
  description: CTI Lock Access Register
  field:
  - bits: '31:0'
    longdesc: Writing the key value 0xC5ACCE55 to this field unlocks the lock, enabling
      write accesses to this component's registers through a memory-mapped interface.Writing
      any other value to this register locks the lock, disabling write accesses to
      this component's registers through a memory mapped interface.
    name: KEY
    shortdesc: Lock Access control.
    type: wo
  name: LAR
  offset: '0x00000FB0'
  type: wo
  width: 32
- default: '0x00000000'
  description: CTI Lock Status Register
  field:
  - bits: '2'
    longdesc: RAZ.
    name: NTT
    shortdesc: Not thirty-two bit access required.
    type: ro
  - bits: '1'
    longdesc: 'For an access to LSR that is not a memory-mapped access, or when the
      software lock is not implemented, this field is RES0.For memory-mapped accesses
      when the software lock is implemented, possible values of this field are:'
    name: SLK
    shortdesc: Software lock status for this component.
    type: ro
  - bits: '0'
    longdesc: 'For an access to LSR that is not a memory-mapped access, this field
      is RAZ. For memory-mapped accesses, the value of this field is IMPLEMENTATION
      DEFINED. Permitted values are:'
    name: SLI
    shortdesc: Software lock implemented.
    type: ro
  name: LSR
  offset: '0x00000FB4'
  type: ro
  width: 32
- default: '0x0000000A'
  description: CTI Authentication Status Register
  field:
  - bits: '3:2'
    longdesc: SNID.Otherwise, holds the same value as DBGAUTHSTATUS_EL1.NSNID.
    name: NSNID
    shortdesc: If EL3 is not implemented and the processor is Secure, holds the same
      value as DBGAUTHSTATUS_EL1.
    type: ro
  - bits: '1:0'
    longdesc: SID.Otherwise, holds the same value as DBGAUTHSTATUS_EL1.NSID.
    name: NSID
    shortdesc: If EL3 is not implemented and the processor is Secure, holds the same
      value as DBGAUTHSTATUS_EL1.
    type: ro
  name: AUTHSTATUS
  offset: '0x00000FB8'
  type: ro
  width: 32
- default: '0x47701A14'
  description: CTI Device Architecture Register
  field:
  - bits: '31:21'
    longdesc: For CTI, this is ARM Limited.Bits [31:28] are the JEP 106 continuation
      code, 0x4.Bits [27:21] are the JEP 106 ID code, 0x3B.
    name: ARCHITECT
    shortdesc: Defines the architecture of the component.
    type: ro
  - bits: '20'
    longdesc: This field is 1 in v8-A.
    name: PRESENT
    shortdesc: When set to 1, indicates that the DEVARCH is present.
    type: ro
  - bits: '19:16'
    longdesc: For architectures defined by ARM this is the minor revision.For CTI,
      the revision defined by v8-A is 0x0.All other values are reserved.
    name: REVISION
    shortdesc: Defines the architecture revision.
    type: ro
  - bits: '15:0'
    longdesc: For architectures defined by ARM this is further subdivided.For CTI:Bits
      [15:12] are the architecture version, 0x1.Bits [11:0] are the architecture part
      number, 0xA14.This corresponds to CTI architecture version CTIv2.
    name: ARCHID
    shortdesc: Defines this part to be a v8-A debug component.
    type: ro
  name: DEVARCH
  offset: '0x00000FBC'
  type: ro
  width: 32
- default: '0x01040800'
  description: CTI Device ID Register 0
  field:
  - bits: '25:24'
    longdesc: Indicates presence of the input gate. If the CTM is not implemented,
      this field is RAZ.All other values are reserved.
    name: INOUT
    shortdesc: Input/output options.
    type: ro
  - bits: '21:16'
    longdesc: IMPLEMENTATION DEFINED. For v8-A, valid values are:and so on up to 0b100000,
      32 channels (0.31) implemented.All other values are reserved.
    name: NUMCHAN
    shortdesc: Number of ECT channels implemented.
    type: ro
  - bits: '13:8'
    longdesc: IMPLEMENTATION DEFINED. This is one more than the index of the largest
      trigger, rather than the actual number of triggers.For v8-A, valid values are:and
      so on up to 0b100000, 32 triggers (0.31) implemented.All other values are reserved.
      If the Trace Extension is implemented, this field must be at least 001000. There
      is no guarantee that any of the implemented triggers, including the highest
      numbered, are connected to any components.
    name: NUMTRIG
    shortdesc: Number of triggers implemented.
    type: ro
  - bits: '4:0'
    longdesc: This relates only to additional external triggers outside those defined
      for v8-A.
    name: EXTMUXNUM
    shortdesc: Maximum number of external triggers available for multiplexing into
      the CTI.
    type: ro
  name: DEVID
  offset: '0x00000FC8'
  type: ro
  width: 32
- default: '0x00000014'
  description: CTI Device Type Register
  field:
  - bits: '7:4'
    longdesc: Must read as 0x1 to indicate this is a processor component.
    name: SUB
    shortdesc: Subtype.
    type: ro
  - bits: '3:0'
    longdesc: Must read as 0x4 to indicate this is a cross-trigger component.
    name: MAJOR
    shortdesc: Major type.
    type: ro
  name: DEVTYPE
  offset: '0x00000FCC'
  type: ro
  width: 32
- default: '0x00000004'
  description: CTI Peripheral Identification Register 4
  field:
  - bits: '7:4'
    longdesc: RAZ. Log2 of the number of 4KB pages from the start of the component
      to the end of the component ID registers.
    name: SIZE
    shortdesc: Size of the component.
    type: ro
  - bits: '3:0'
    longdesc: For ARM Limited, this field is 0b0100.
    name: DES_2
    shortdesc: Designer, JEP106 continuation code, least significant nibble.
    type: ro
  name: PIDR4
  offset: '0x00000FD0'
  type: ro
  width: 32
- default: '0x00000000'
  description: CTI Peripheral Identification Register 5
  field:
  - bits: '31:0'
    name: RESERVED
    type: ro
  name: PIDR5
  offset: '0x00000FD4'
  type: ro
  width: 32
- default: '0x00000000'
  description: CTI Peripheral Identification Register 6
  field:
  - bits: '31:0'
    name: RESERVED
    type: ro
  name: PIDR6
  offset: '0x00000FD8'
  type: ro
  width: 32
- default: '0x00000000'
  description: CTI Peripheral Identification Register 7
  field:
  - bits: '31:0'
    name: RESERVED
    type: ro
  name: PIDR7
  offset: '0x00000FDC'
  type: ro
  width: 32
- default: '0x000000A8'
  description: CTI Peripheral Identification Register 0
  field:
  - bits: '7:0'
    name: PART_0
    type: ro
  name: PIDR0
  offset: '0x00000FE0'
  type: ro
  width: 32
- default: '0x000000B9'
  description: CTI Peripheral Identification Register 1
  field:
  - bits: '7:4'
    longdesc: For ARM Limited, this field is 0b1011.
    name: DES_0
    shortdesc: Designer, least significant nibble of JEP106 ID code.
    type: ro
  - bits: '3:0'
    name: PART_1
    type: ro
  name: PIDR1
  offset: '0x00000FE4'
  type: ro
  width: 32
- default: '0x0000004B'
  description: CTI Peripheral Identification Register 2
  field:
  - bits: '7:4'
    longdesc: Parts can also use this field to extend Part number to 16-bits.
    name: REVISION
    shortdesc: Part major revision.
    type: ro
  - bits: '3'
    longdesc: Indicates a JEP106 identity code is used.
    name: JEDEC
    shortdesc: RAO.
    type: ro
  - bits: '2:0'
    longdesc: For ARM Limited, this field is 0b011.
    name: DES_1
    shortdesc: Designer, most significant bits of JEP106 ID code.
    type: ro
  name: PIDR2
  offset: '0x00000FE8'
  type: ro
  width: 32
- default: '0x00000000'
  description: CTI Peripheral Identification Register 3
  field:
  - bits: '7:4'
    longdesc: Parts using CTIPIDR2.REVISION as an extension to the Part number must
      use this field as a major revision number.
    name: REVAND
    shortdesc: Part minor revision.
    type: ro
  - bits: '3:0'
    longdesc: Indicates someone other than the Designer has modified the component.
    name: CMOD
    shortdesc: Customer modified.
    type: ro
  name: PIDR3
  offset: '0x00000FEC'
  type: ro
  width: 32
- default: '0x0000000D'
  description: CTI Component Identification Register 0
  field:
  - bits: '7:0'
    longdesc: Must read as 0x0D.
    name: PRMBL_0
    shortdesc: Preamble.
    type: ro
  name: CIDR0
  offset: '0x00000FF0'
  type: ro
  width: 32
- default: '0x00000090'
  description: CTI Component Identification Register 1
  field:
  - bits: '7:4'
    longdesc: Reads as 0x9, debug component.
    name: CLASS
    shortdesc: Component class.
    type: ro
  - bits: '3:0'
    longdesc: RAZ.
    name: PRMBL_1
    shortdesc: Preamble.
    type: ro
  name: CIDR1
  offset: '0x00000FF4'
  type: ro
  width: 32
- default: '0x00000005'
  description: CTI Component Identification Register 2
  field:
  - bits: '7:0'
    longdesc: Must read as 0x05.
    name: PRMBL_2
    shortdesc: Preamble.
    type: ro
  name: CIDR2
  offset: '0x00000FF8'
  type: ro
  width: 32
- default: '0x000000B1'
  description: CTI Component Identification Register 3
  field:
  - bits: '7:0'
    longdesc: Must read as 0xB1.
    name: PRMBL_3
    shortdesc: Preamble.
    type: ro
  name: CIDR3
  offset: '0x00000FFC'
  type: ro
  width: 32
